1. difference between encapsulation and abstraction
2. can we achieve encapsulation without abstraction?if yes how?
A) Yes, encapsulation can exist without abstraction by simply making class attributes private and providing controlled access via methods. Abstraction, on the other hand, focuses on hiding implementation details, which is not required for encapsulation.
3. about string constant pool and where objects and literals are stored?
A) String Constant Pool is a special memory area inside the heap where string literals are stored to optimize memory usage.
4. can interface have private methods?
A) Yes, since Java 9, interfaces can have private methods.To avoid code duplication in default and static methods.To enhance code readability and modularity by breaking logic into smaller, reusable methods.Private methods cannot be accessed outside the interface—they are meant for internal use within the interface.
5. purpose of private methods inside the interface if they cannot be accessed outside the internet?
A) Private methods in interfaces cannot be accessed outside the interface, but they are useful for code reusability, modularity, and maintainability within the interface itself. They help avoid duplication in default and static methods.
6. if u don't use the terminal operations in a stream pipeline,will the intermediate operations be executed?why or why not ?
A) No, if you don’t use a terminal operation in a Stream pipeline, the intermediate operations will not be executed.Streams in Java are lazy.Intermediate operations (map(), filter(), sorted(), etc.) are not executed immediately.They are only recorded and executed only when a terminal operation (collect(), forEach(), count(), etc.) is called.it is only executed when the final result is needed.
Eg: in a tv remote when pressing buttons noting until u turn on the tv.
7. explain internal working on hashmap in detail?
8. if two keys have the same hashcode,how does hashmap store them internally?
9. how many types of class loaders are there ?
10. what happens when two different class loaders load the same class ?
11. is rest always stateless ? can a rest api maintain a session?
A) rest is designed to be stateless meaning the server does not store client session data however rest api can maintain a session using tokens,cookies and databases storages
12. how will u configure your application if ur application databases for different environment?
A) use spring profiles to configure different databases for different environment define seperate application.properties or yml files like application-dev.properties,application-prod.properties  

















SPRING INTERVIEW QUESTIONS :
what happens if a sring bean has a private constructor?
A) if a class is annotated with @component then the ioc container will automatically create a object for that class but if a class has a private constructor then the ioc container cannot create a object for that class..in this scenario u mush have the static method that returns the object of the class.

what is the difference between constructor injection and setter injection?

can we create a spring bean without using @component ?

can we have multiple @bean methods of same type in a spring configuration?

what happens if more than one bean of same type is available?

difference between @conponent,@service and @repository?

difference ebetween utility classes and helper classes?
A) Utility classes are classes that contain static methods and constants that perform general-purpose, reusable operations. 
Characteristics:
Methods are static
Cannot (or should not) be instantiated
Often declared with a private constructor to prevent object creation
HELPER CLASSES :
Helper classes are similar to utility classes but are usually more context-specific. They are created to assist a specific class or module and may not always use static methods.
Characteristics:
May or may not have static methods
May contain instance methods, depending on the use case
Generally more tightly coupled with business logic


can we create the springboot appication without using @springbootapplication?
A) using enableautoconfiguration,conponentcan and configuration.

can we run a springboot application without an embedded server?
A) yes, by the property spring.web.web-application-type=none in the properties files

how to disable the autoconfiguration in springboot?
A) @springbootapplication(exclude={DatasourceAutoConfiguration.class})

can we change the port of a springboot application without modifying the application.properties file?
A) yes, using command line args java -jar app.jar --server.port=2000

what happens if we have multiple application.properties file in a springboot application?
A) spring loads them in this order: /config folder inside the jar, classpath root(/src/resource), external config source(environment variables,command-line args)

what happens if @springbootapplication is used as an interface?
A) it fails because it cannot initiate an interace..


difference between controller and restcontroller?

what happens if we don't define an @Id field in a jpa entity?
A) hibernate will throw an exception.


what should we use if we do not want to save a property 
A) use these annotations @transient

how to store the list of string values in database using datajpa?
A) us e the annotation @ElementCollection

how to save the child entity automatically while saving the parent?
use the annotaion @oneToOne(cascade=CascadeType.ALL)

can we execute a native query in springdata jpa?
A)yes using @query with nativequery

can we execute stored procedures using springdatajpa?
