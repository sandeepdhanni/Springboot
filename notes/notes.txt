BPMN: 

BPMN is a graphical representation for specifying business processes in a workflow. It helps
 stakeholders understand the flow of the process from start to end, including tasks, events,
 gateways, and other elements.



DMN 

DMN is a standard for modeling and executing decisions that are determined by business rules.
 It separates the decision logic from the process, making it easier to manage and update.


Gateways 

Gateways in Camunda BPMN are used to control the flow of a process.They help in making decisions, 
synchronizing concurrent paths, and defining complex workflow behaviors. 

Exclusive Gateway 
An exclusive gateway routes the flow based on a condition. Only one of the outgoing paths is taken.
Example: Online Order Processing
Scenario: After a customer places an order, the system checks the stock availability.
Implementation: If the item is in stock, the order proceeds to payment. If the item is out of stock,
 the customer is notified.


Parallel Gateway 

A parallel gateway splits the flow into multiple paths that run simultaneously.

Example: Employee Onboarding


 Inclusive Gateway
An inclusive gateway routes the flow based on conditions, and one or more paths can be taken.

Example: Travel Expense Reimbursement


Event-Based Gateway

An event-based gateway routes the flow based on events rather than conditions.

Example: CHATBOT

Complex Gateway

A complex gateway is used for complex merging and splitting behavior that cannot be easily defined 
using other gateways.
Example: Project Approval









FORMS:
 forms are used to capture user input for User Tasks.  Camunda supports different types of forms,
 such as Generated Task Forms, Embedded Task Forms, and External Task Forms.

Generated Task Forms:

These are auto-generated by Camunda based on form field definitions in the BPMN model.
Simple to use but limited in customization.

Embedded Task Forms:

Custom HTML forms embedded within the BPMN model.
More flexible and allows for greater customization and styling.


External Task Forms:

Custom forms hosted externally and integrated via URL.
Ideal for complex forms requiring advanced functionality and styling.


Business Process Management 

systematic approach to making an organization's workflows more effective, efficient, and adaptable
 to an ever-changing environment. It involves designing, modeling, executing, monitoring, and 
optimizing business processes. 

Key Components of BPM
Design: Identifying and documenting existing processes and designing new ones.
Modeling: Representing processes in a visual format, often using BPMN (Business Process Model and Notation).
Execution: Implementing processes in a real-world environment, typically using BPM software.
Monitoring: Tracking the performance of processes in real-time to ensure they are functioning as intended.
Optimization: Analyzing performance data and making improvements to processes.



Camunda
Camunda is an open-source platform for workflow and decision automation. It provides tools for
 modeling, executing, and optimizing business processes using BPMN for workflows and DMN for decision
 management.

Key Features of Camunda:
BPMN Workflow Engine: Executes business processes modeled with BPMN.
DMN Decision Engine: Executes business rules modeled with DMN.
Task Management: Provides user task management features.
Cockpit: A web-based interface for monitoring and managing running process instances.
Optimize: Provides advanced analytics and reporting capabilities for business processes.
Modeler: A desktop application for creating BPMN and DMN diagrams.




User Task
Description: A User Task is assigned to a human user. It represents an activity that requires human
 intervention.
Example: Approving a Loan Application


Service Task
Description: A Service Task represents an automated activity executed by the system. This could 
involve calling a web service, executing a script, or running some business logic.
Example: Sending a Confirmation Email


Script Task
Description: A Script Task allows you to execute a script written in a supported scripting language, 
such as JavaScript or Groovy.


Business Rule Task
Description: A Business Rule Task is used to execute decision logic defined in a Decision Model and 
Notation (DMN) table.
Example: Credit Risk Assessment

 Send Task
Description: A Send Task is used to send a message to an external system or another process.
Example: Notify Warehouse



Receive Task
Description: A Receive Task waits for a message from an external source before continuing the process.

Example: Waiting for Customer Payment


 Subprocess
Description: A Subprocess is a process within a process, used to encapsulate a set of activities into a single task.

Example: Handle Customer Complaints




Collapsed Subprocess
Description: A collapsed subprocess is represented as a single activity within the parent process.
 The internal details of the subprocess are hidden and can be viewed by expanding the subprocess in a
 separate view or diagram.



Expanded Subprocess
Description: An expanded subprocess is displayed inline within the parent process. All the details
 and elements of the subprocess are visible within the main process diagram.









lambda expression:
the expression through which we can represent anomonous function..
anomous function means nameless or unknown like the function or method which does not have any name








exception:

an exception is an event that disrupts the normal flow of the program. It is an object which is thrown at runtime.

exception handling:
Exception Handling is a mechanism to handle runtime errors such as ClassNotFoundException, IOException, SQLException, 
RemoteException, etc.The core advantage of exception handling is to maintain the normal flow of the application.
There are mainly two types of exceptions: checked and unchecked.


checked exception:
These are the exceptions that are checked at compile time. If some code within a method throws a checked exception,
 then the method must either handle the exception or it must specify the exception using the throws keyword.
eg:ioexception,sqlexception and classnotfoundexception.


unchecked exception:
These are the exceptions that are not checked at compile time. In C++, all exceptions are unchecked, so it is 
not forced by the compilerâ€™s to either handle or specify the exception. It is up to the programmers to be civilized
and specify or catch the exceptions.
eg:nullpointerexception,arrayindexoutofbounndexception,arithmeticexception


try	The "try" keyword is used to specify a block where we should place an exception code. It means we can't use try block alone. The try block must be followed by either catch or finally.
catch	The "catch" block is used to handle the exception. It must be preceded by try block which means we can't use catch block alone. It can be followed by finally block later.
finally	The "finally" block is used to execute the necessary code of the program. It is executed whether an exception is handled or not.
throw	The "throw" keyword is used to throw an exception.
throws	The "throws" keyword is used to declare exceptions. It specifies that there may occur an exception in the method. It doesn't throw an exception. It is always used with method signature.


A try block can be followed by one or more catch blocks. Each catch block must contain a different exception handler.
At a time only one exception occurs and at a time only one catch block is executed.















collections in java:
The Collection in Java is a framework that provides an architecture to store and manipulate the group of objects.
Java Collection means a single unit of objects. Java Collection framework provides many interfaces (Set, List
, Queue, Deque) and classes (ArrayList, Vector, LinkedList, PriorityQueue, HashSet, LinkedHashSet, TreeSet).





why does java does not include pointers
Java does not include pointers for several reasons, primarily related to safety, simplicity, and security:
 Java uses automatic garbage collection to manage memory.: Pointers can lead to unsafe code. They allow 
direct access to memory, which can result in issues.using of pointers can lead to memory leaks..



what is default method
default methods were introduced to provide a way to add new methods to interfaces without breaking
 existing implementations. These methods are defined with the default keyword 



can main class implements list interface
Implementing the List interface requires implementing a large number of methods, such as add(),
 remove(), get(), size(), and many others. This can make the class very complex and difficult to manage.


is linked list supported in java
 Java provides built-in support for linked lists through the LinkedList class, which is part of the 
Java Collections Framework. The LinkedList class implements the List, Deque, and Queue interfaces, 
allowing it to be used as a list, a queue, or a deque 


Recursion :
Recursion in Java (and in programming in general) is a technique where a method calls itself to 
solve a problem. A recursive method solves a small part of the problem and then delegates the rest 
of the problem to itself. This continues until the method reaches a base case, which is a condition 
that stops the recursion.


System.out: It's commonly used to print text to the console.
System.err:  It's used to output error messages 
System.in: It's used to read input from the console. 


LinkedList
LinkedList is a doubly-linked list implementation of the List and Deque interfaces. It provides
 efficient insertions and deletions but has slower access times compared to ArrayList.

LinkedList<String> linkedList = new LinkedList<>();


Vector
Vector is a synchronized, resizable array implementation of the List interface. It is 
thread-safe but generally slower than ArrayList due to synchronization overhead.



Just-In-Time (JIT) Compiler:

The JIT compiler is a part of the Java Runtime Environment (JRE) that improves the 
performance of Java applications by compiling bytecode into native machine code at 
runtime. The JIT compiler is part of the Java Virtual Machine


String Pool:

The String Pool (or String Intern Pool) is a special memory region in the Java heap
 that stores string literals. The purpose of the String Pool is to save memory by 
reusing instances of strings that have the same value.
 


Marker Interface:

A marker interface in Java is an interface that has no methods or fields. It is 
used to indicate that a class implementing the interface has a certain property or
 should be treated in a special way by the JVM



can we override static or private methods..why?
 Static methods belong to the class itself rather than to any particular 
instance of the class. They are called on the class, not on instances.


 Private methods are accessible only within the class where they are defined.
 They cannot be accessed directly from outside the class or by subclasses.



does finally execute ?
Yes, the finally block in Java is designed to execute regardless of whether
 an exception was thrown or not, and it runs after the try and catch blocks. 


how can u make the class immutable?
An immutable class in Java is designed to ensure that once an instance is
 created, its state cannot be modified. This is achieved by declaring the 
class as final, using private and final fields, omitting setter methods, 
and ensuring that any mutable fields are properly encapsulated.



what is singleton and how can u make the class singleton
The Singleton Design Pattern ensures that a class has only one instance 
and provides a global point of access to that instance. This pattern is
 often used when a single object is needed to coordinate actions across
 the system, such as a configuration manager 


why map does't extend collection interface?

Collection Interface: Represents a group of objects, known as elements.
 It includes various types of collections like List, Set, and Queue. 
The main purpose of Collection is to define operations for storing 
and manipulating a group of objects.
Map Interface: Represents a collection of key-value pairs where each
 key is associated with exactly one value. The Map interface provides
 methods for retrieving values based on keys and managing these key-
value associations.








in oder to connect to to multiple databases we need to create 2 entities...we cannot keep all the 
entities in one package.....database 1 related entities should be created in package and database 2 related
entites should be created in another package because we need to tell spring which package is used for database 1 
and which package is used for database2..if we have multiple databases we should define multiple entities and 
multiple repositories..



jHz-eMmHgAeLrn22iXTvd3uNSuniGOeLqKnQBx7bgWDQsnss7x7NSf_ktDamnxuPv1nbFky5Z4jaeYWmzs3hNCm_sQKyihkb






csrf token(cross side request forgory):
Cross-Site Request Forgery (CSRF) is a type of security vulnerability that allows an attacker to trick a user
into performing actions on a web application where they are authenticated, without their consent.


How CSRF Works
Victim Authentication:

The user (victim) logs into a web application, e.g., an online banking system, and a session cookie is set 
in their browser to maintain the authenticated session.
Malicious Site:

The attacker creates a malicious website that contains a request to the target web application. This can
 be an HTTP GET or POST request.
Victim Visits Malicious Site:

While the victim is still logged into the target web application, they visit the malicious website, either 
by clicking on a link, receiving an email, or any other means.
CSRF Attack Execution:

The malicious website automatically makes a request to the target web application using the victim's 
authenticated session. Since the victim's browser includes the session cookie with the request, the target 
web application processes the request as if it came from the authenticated user.



stream api:
it is mainly used to process the collections of objects.stream is a sequence of objectsthat supports various
methods which can be piplined to produce he desired result...


bean in springboot:
a bean is an object that is managed by the Spring IoC container.When you run a Spring application, the 
framework searches your code and creates beans from any components it finds



semaphores in java:
A semaphore controls access to a shared resource through the use of a counter. If the counter is greater
 than zero, then access is allowed. If it is zero, then access is denied. What the counter is counting 
are permits that allow access to the shared resource. Thus, to access the resource, a thread must be 
granted a permit from the semaphore.

servlet


















hibernate:
cascading refers to the process of propagating changes from a parent entity to its associated child 
entities. This means that when a parent entity is saved, updated, or deleted, the changes are automatically 
applied to its child entities
