statement that TypeScript is a superset of JavaScript, but it's not like it is adding more features

to JavaScript. No, it doesn't give you more of callbacks. It doesn't give you more of arrow
function. It just allows you to write JavaScript in a much precise manner so that your code

faces a lot less error in the runtime. If there is any error, it is already being displayed to you

while writing the code at the kind of when you're just typing them out in the your favorite editor,

maybe VS code or something. That is where we want to just catch those error and find that we

shouldn't be doing something like that. So that is all your TypeScript. It is not going to give you






 And at that time, you just say, ah, that's wrong. And you need to
rerun the code itself. But it would be really a great help if there is a static checker which

checks my code as I try to write it. For example, I'm trying to access an object which is not yet

defined. If something can analyze my code and can give me a hint that that object doesn't exist

in the object properties, then obviously it's much more easier for me. 
TypeScript is just for static checking. It just analyze your code and help you to understand that

you might be running into a potential error without even running the code and getting the errors
at the runtime itself. That's all it does. So I hope you understand that. The whole job of the
TypeScript is simply to analyze the code. That's it. That's all it does



what typescript does?
The simple idea behind the TypeScript is static checking.static checking which is used in many language like golang,java eyc.static checking means that whenever you are writting the code,the parser of the language or the entire syntax of the language is constantlybeing analysed by the ide..but not in case of javascript..whatever u write is just okey for javascript and when the code executes in te browser or engine like node environmentthen only the errors of javascript are thrown at your face..
typescript is a development tool,it helps you to write better code with less problems with more scalable and maintainable code that is easily available and the chances of producing the error is much more less..



























